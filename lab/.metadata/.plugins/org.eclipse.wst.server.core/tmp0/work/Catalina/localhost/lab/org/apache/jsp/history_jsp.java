/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-06 05:55:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class history_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/top.jsp", Long.valueOf(1685452803000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html><head><link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<title>개별수강 이력</title></head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link href = \"style.css?after\" rel = \"stylesheet\" type = \"text/css\">\n");
      out.write("</head>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<div class = \"topButton\">\n");
      out.write("<table class=\"top\" width=\"75%\" align=\"center\">\n");
      out.write("	<tr>\n");
      out.write("		<td><a href=\"all_course.jsp\"  >전체과목 조회</a></td>\n");
      out.write("		<td><a href=\"insert.jsp\">수강신청 입력</a></td>\n");
      out.write("		<td><a href=\"delete.jsp\">수강신청 삭제</a></td>\n");
      out.write("		<td><a href=\"select.jsp\">수강신청 조회</a></td>\n");
      out.write("		<td><a href=\"history.jsp\">개별수강 이력</a></td>\n");
      out.write("	</tr>\n");
      out.write("</table>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write('\n');
   if (session_id==null) response.sendRedirect("login.jsp");  
      out.write("\n");
      out.write("<br><br><br>\n");
      out.write("<table width=\"70%\" align=\"center\" border>\n");
      out.write("<br>\n");
      out.write("<tr><th>수업번호</th><th>과목명</th><th>학년도</th><th>학기</th>\n");
      out.write("      <th>학점</th></tr>\n");

   Connection myConn = null;      
   Statement stmt = null;   
   ResultSet myResultSet = null;
   String mySQL = "";
   int totalnum = 0; int totalnum2 = 0;
   
   String dbdriver = "oracle.jdbc.OracleDriver";
   String dburl="jdbc:oracle:thin:@localhost:1521:xe";
   String user = "kimminjoo";
   String passwd = "1234";

   try {
      Class.forName(dbdriver);
            myConn =  DriverManager.getConnection (dburl, user, passwd);
      stmt = myConn.createStatement();   
    } catch(SQLException ex) {
        System.err.println("SQLException: " + ex.getMessage());
    }
   
   mySQL = "select h.c_id, c.c_name, substr(h.h_sem, 1, 4) h_year, substr(h.h_sem, -1) h_term, h.h_score FROM history h, course c where h.c_id = c.c_id and h.c_id_no = c.c_id_no and s_id = '" + session_id + "'";
   
   myResultSet = stmt.executeQuery(mySQL); 

   if (myResultSet != null) {
      while (myResultSet.next()) {   
         String c_id = myResultSet.getString("c_id");   
         String c_name = myResultSet.getString("c_name");
         int h_year = myResultSet.getInt("h_year");
         int h_term = myResultSet.getInt("h_term");
         String h_score = myResultSet.getString("h_score");
         
    CallableStatement cstmt = myConn.prepareCall("{call MajorCount(?,?,?)}");
    cstmt.setString(1, session_id);
    cstmt.registerOutParameter(2, java.sql.Types.INTEGER);
    cstmt.registerOutParameter(3, java.sql.Types.INTEGER);
    try {
    	cstmt.execute();
        totalnum = cstmt.getInt(2);
        totalnum2 = cstmt.getInt(3);
        
      out.write("\n");
      out.write("        ");

    } catch(SQLException ex) {
        System.err.println("SQLException: " + ex.getMessage());
    }

   
      out.write("\n");
      out.write("   <tr>\n");
      out.write("     <td>");
      out.print( c_id );
      out.write("</td>\n");
      out.write("     <td>");
      out.print( c_name );
      out.write("</td>\n");
      out.write("     <td>");
      out.print( h_year );
      out.write("</td>\n");
      out.write("     <td>");
      out.print( h_term );
      out.write("</td>\n");
      out.write("     <td>");
      out.print( h_score );
      out.write("</td>\n");
      out.write("     \n");
      out.write("   </tr>\n");
      out.write("   ");

         }
      }
      stmt.close();  myConn.close();
   
      out.write("\n");
      out.write("   </table>\n");
      out.write("   <br><br>\n");
      out.write("   <div id = \"CountInfo\" align=\"center\" style=\"font-weight: bold;\">총 전공 :  ");
      out.print(totalnum);
      out.write("학점   &nbsp;&nbsp;&nbsp;  총 교양  :  ");
      out.print(totalnum2);
      out.write("학점</div>\n");
      out.write("   </body></html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
